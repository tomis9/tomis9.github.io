<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine learning on tomis9&#39;s cookbook</title>
    <link>https://tomis9.github.io/categories/machine-learning/</link>
    <description>Recent content in Machine learning on tomis9&#39;s cookbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 05 Aug 2019 18:45:18 +0200</lastBuildDate>
    
	<atom:link href="https://tomis9.github.io/categories/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>learning tensorflow</title>
      <link>https://tomis9.github.io/learning_tensorflow/</link>
      <pubDate>Mon, 05 Aug 2019 18:45:18 +0200</pubDate>
      
      <guid>https://tomis9.github.io/learning_tensorflow/</guid>
      <description>The best way to gain intuiton to any new thing you learn is to start from a very beginning and play with it (let’s see what happens if I do this). That’s the power of reinforcement learning ;)
These packages will be useful in the nearest future:
import numpy as np from sklearn.datasets import load_iris from sklearn.linear_model import LinearRegression from sklearn.preprocessing import OneHotEncoder from sklearn.metrics import accuracy_score import tensorflow as tf ## /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>model validation</title>
      <link>https://tomis9.github.io/validation/</link>
      <pubDate>Thu, 23 May 2019 12:46:03 +0200</pubDate>
      
      <guid>https://tomis9.github.io/validation/</guid>
      <description>1. What is model validation and why would you do it? You learned your model and naturally you are wondering how good it is. There are several ways to find out, like measuring the accuracy of predictions, but you may also want to check where exactly particular predictions come from, as this is far from obvious for “black box” models.
 2. Examples cross-validation  confusion matrix https://www.rdocumentation.org/packages/caret/versions/3.45/topics/confusionMatrix
Confusion matrix is confusing at all as the name may suggest.</description>
    </item>
    
    <item>
      <title>useful processing</title>
      <link>https://tomis9.github.io/useful_processing/</link>
      <pubDate>Fri, 17 May 2019 15:44:38 +0200</pubDate>
      
      <guid>https://tomis9.github.io/useful_processing/</guid>
      <description>1. What is useful processing?  many machine learning algorithms require the same kinds of data preprocessing in order for them to work properly. In other words, theses kinds of processing are useful.   2. Examples one-hot encoding R
# data.table dt_iris &amp;lt;- data.table::as.data.table(iris) mltools::one_hot(dt_iris) ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species_setosa ## 1: 5.1 3.5 1.4 0.2 1 ## 2: 4.9 3.0 1.4 0.2 1 ## 3: 4.7 3.</description>
    </item>
    
    <item>
      <title>basic machine learning algorithms</title>
      <link>https://tomis9.github.io/ml/</link>
      <pubDate>Mon, 22 Apr 2019 18:05:21 +0200</pubDate>
      
      <guid>https://tomis9.github.io/ml/</guid>
      <description>1. What is machine learning and why would you use it?  it’s a rather complicated, yet beautiful tool for boldly going where no man has gone before.
 in other words, it enables you to extract valuable information from data.
   2. Examples of the most popular machine learning algorithms in Python and R We’ll be working on iris dataset, which is easily available in Python (from sklearn import datasets; datasets.</description>
    </item>
    
    <item>
      <title>decision trees</title>
      <link>https://tomis9.github.io/decision_trees/</link>
      <pubDate>Fri, 11 Jan 2019 21:18:57 +0100</pubDate>
      
      <guid>https://tomis9.github.io/decision_trees/</guid>
      <description>1. What are decision trees and why would you use them?  decision trees are among the most popular classification algorithms;
 they divide the dataset hierarchically starting from the full dataset, until the stop criterium is met, e.g. the minimum size of a leaf and the purity of leaf;
 in general they are easy to understand, interpret and visualise
 however they are not very efficient, but they can scale, i.</description>
    </item>
    
    <item>
      <title>pytorch</title>
      <link>https://tomis9.github.io/pytorch/</link>
      <pubDate>Sun, 06 Jan 2019 17:44:32 +0100</pubDate>
      
      <guid>https://tomis9.github.io/pytorch/</guid>
      <description>1. What is pytorch and why would you use it?  pytorch is a python package which makes learning deep neaural networks relatively easy and fast
 it’s main “rival” is tensorflow, as pytorch was released by Facebook, but tensorflow by Google
   2. “Hello world” example  inspired by this article
 Let’s define some data:
import numpy as np import pandas as pd import matplotlib.pyplot as plt theta = 2 x = np.</description>
    </item>
    
    <item>
      <title>tensorflow</title>
      <link>https://tomis9.github.io/tensorflow/</link>
      <pubDate>Tue, 01 Jan 2019 18:17:38 +0100</pubDate>
      
      <guid>https://tomis9.github.io/tensorflow/</guid>
      <description>1. What is tensorflow and why would you use it?  tensorflow is a machine learning framework
 which has APIs to Python, C++ and R
 and let&amp;rsquo;s you evaluate any machine learning algorithm, especially deep learning:
 quickly (all the computations are performed in C++)
 easily - you can view your results in a GUI - Tensorboard
 on a huge amount of data, as tensorflow scales easily to many machines and can even make use of GPU.</description>
    </item>
    
    <item>
      <title>nls</title>
      <link>https://tomis9.github.io/nls/</link>
      <pubDate>Sun, 28 Jan 2018 22:52:21 +0100</pubDate>
      
      <guid>https://tomis9.github.io/nls/</guid>
      <description>1. What is nls and why would you use it?  nls, or nonlinear least squares is a statistical method used to describe a process as a nonlinear function of deterministic variables and a random variable;
 you may think of it as an older and stronger brother of linear regression - more robust, powerful, smarter and difficult to understand ;)
   2. A “Hello World” example Let’s assume we want to model US population as a function of year.</description>
    </item>
    
  </channel>
</rss>