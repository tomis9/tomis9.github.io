<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on tomis9&#39;s cookbook</title>
    <link>https://tomis9.github.io/tags/python/</link>
    <description>Recent content in Python on tomis9&#39;s cookbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 23 Nov 2018 12:58:49 +0200</lastBuildDate>
    
	<atom:link href="https://tomis9.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>spark</title>
      <link>https://tomis9.github.io/spark/</link>
      <pubDate>Fri, 23 Nov 2018 12:58:49 +0200</pubDate>
      
      <guid>https://tomis9.github.io/spark/</guid>
      <description>1. What is spark and why would use use it?  Spark is a smooth framework for working with big data, i.e. hdfs;
 it can be accessed from Python, R, scala (spark is actually written in scala) and java;
 it is probably the most popular big data tool nowadays for data scientists.
  2. A few &amp;ldquo;Hello World&amp;rdquo; examples a) pyspark Prerequisites Installation of pyspark In this tutorial we will work on a development python version of spark.</description>
    </item>
    
    <item>
      <title>logging</title>
      <link>https://tomis9.github.io/logging/</link>
      <pubDate>Sat, 20 Oct 2018 00:15:21 +0200</pubDate>
      
      <guid>https://tomis9.github.io/logging/</guid>
      <description>1. What is logging and why would you use it?  Logging, in general, sends information about the execution of a program to the outside of the program, e.g. to stdout or to a file. Why would that be useful?
 You may get the information of how and when the program was executed, e.g. who was using it&amp;rsquo;s functionalities and if all the pieces of your program finished correctly.</description>
    </item>
    
    <item>
      <title>sqlAlchemy</title>
      <link>https://tomis9.github.io/sqlalchemy/</link>
      <pubDate>Sat, 25 Aug 2018 16:22:07 +0100</pubDate>
      
      <guid>https://tomis9.github.io/sqlalchemy/</guid>
      <description>1. What is sqlAlchemy and why would you use it?  sqlAlchemy is a python module that enables you to connect to and use sql databases without writing code in sql;
 using sqlAlchemy has several advantages:
 you will avoid using long sql strings in your code, which are difficult to read without syntax highlighting (unless you keep you sql queries in separate sql files);
 you are not vulnerable to sql injection attacks anymore;</description>
    </item>
    
    <item>
      <title>flask</title>
      <link>https://tomis9.github.io/flask/</link>
      <pubDate>Mon, 13 Aug 2018 20:19:17 +0200</pubDate>
      
      <guid>https://tomis9.github.io/flask/</guid>
      <description>1. What is flask and why would you use it?  flask is a python framwework for creating web applications and apis;
 it provides a full and simple support for backend, while you still create the frontend with html+css+javascript.
  For production use it is not as popular as Django, as id does not scale that well to huge projects. However in data science you will not create such huge webservices and flask, with it&amp;rsquo;s simplicity, reliability, clearness and great community support is more than enough.</description>
    </item>
    
    <item>
      <title>pyenv, virtualenv, freeze</title>
      <link>https://tomis9.github.io/pyenv/</link>
      <pubDate>Sun, 12 Aug 2018 15:32:40 +0100</pubDate>
      
      <guid>https://tomis9.github.io/pyenv/</guid>
      <description>1. What are pyenv, virtualenv and freeze and why would you use them?  these three Python packages let you install your favourite Python version with your favourite Python packages&amp;rsquo; versions on any machine independently to those already installed on the system; you can even store many Python versions and Python packages&amp;rsquo; versions;
 pyenv let&amp;rsquo;s you install any Python version you like;
 virtualenv let&amp;rsquo;s you install any Python&amp;rsquo;s package version you like;</description>
    </item>
    
    <item>
      <title>decorators</title>
      <link>https://tomis9.github.io/decorators/</link>
      <pubDate>Sun, 12 Aug 2018 15:30:35 +0200</pubDate>
      
      <guid>https://tomis9.github.io/decorators/</guid>
      <description>1. What are decorators and why would you use them?  decorators in Python are special functions that take a function as an argument and slightly change it’s behaviour, e.g. it’s return value;
 you can write your own decorators, which is rather easy (I highly recommend Fluent Python as a reference)
 but there are already many useful decorators available in Python.
  I am not going to describe here how to write your own decorator as, to be honest, I used them only twice in my career.</description>
    </item>
    
    <item>
      <title>testing</title>
      <link>https://tomis9.github.io/testing/</link>
      <pubDate>Sun, 04 Feb 2018 12:02:23 +0100</pubDate>
      
      <guid>https://tomis9.github.io/testing/</guid>
      <description>1. What is testing and why would you use it?  testing or test-driven development (TDD) is a discipline, which relies on writing a test for every functionality before creating it;
 at first the test will fail, as we have not provided the proper functionality yet. Our goal is to fulfill this functionality, so the test will pass.
  In reality you modify your tests as you create the functionality or even write the tests after you are finished writing it.</description>
    </item>
    
  </channel>
</rss>